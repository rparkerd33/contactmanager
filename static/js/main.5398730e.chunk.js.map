{"version":3,"sources":["components/layout/Header.js","context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","email","phone","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","_this$props$contact","onClick","style","cursor","float","color","marginRight","Contacts","Fragment","contacts_Contact","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5398730e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\n const Header = (props) => {\n    const { branding } = props\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n            <div>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"> Home</i></Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"> Add</i></Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"> About</i></Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n    branding: \"My App\"\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\n\nexport default Header;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n        return {\n            ...state,\n            contacts: state.contacts.filter(contact => contact.id !== action.payload)\n        };\n        case 'ADD_CONTACT':\n        return {\n            ...state,\n            contacts: [action.payload, ...state.contacts]\n        };\n        case 'UPDATE_CONTACT':\n        return {\n            ...state,\n            contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n        };\n        default:\n        return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n   async componentDidMount() {\n        const res = await axios\n        .get('https://jsonplaceholder.typicode.com/users');\n\n        this.setState({contacts: res.data});\n    }\n\n\n    render () {\n        return (\n            <Context.Provider value={this.state}>\n             {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n  return (\n    <div>\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input type={type} value={value} className={classnames('form-control form-control-lg', { 'is-invalid': error})} onChange={onChange} placeholder={placeholder} name={name}/>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default  TextInputGroup;","import React, { Component } from 'react';\nimport{ Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state= {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        //Check for errors\n        if(name === '') {\n            this.setState({errors: {name: \"Name is Required\"}});\n            return;\n        }\n        if(email === '') {\n            this.setState({errors: {email: \"Email is Required\"}});\n            return;\n        }\n        if(phone === '') {\n            this.setState({errors: {phone: \"Phone is Required\"}});\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios\n        .post('https://jsonplaceholder.typicode.com/users', newContact);\n\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n      const { name, email, phone, errors } = this.state;\n\n      return (\n          <Consumer>\n              {value => {\n                  const { dispatch } = value;\n                  return(\n                    <div className=\"card mb-3\">\n                    <div className=\"card-header\">Add Contact</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                            <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" value={name} onChange={this.onChange} error={errors.name} />\n                            <TextInputGroup label=\"Email\" type=\"email\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={this.onChange} error={errors.email} />\n                            <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone\" value={phone} onChange={this.onChange} error={errors.phone} />\n                         <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light\"/>\n                        </form>\n                    </div>\n                  </div>\n                  )\n              }}\n          </Consumer>\n      )\n  }\n}\n\nexport default  AddContact","import React, { Component } from 'react';\nimport{ Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state= {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        //Check for errors\n        if(name === '') {\n            this.setState({errors: {name: \"Name is Required\"}});\n            return;\n        }\n        if(email === '') {\n            this.setState({errors: {email: \"Email is Required\"}});\n            return;\n        }\n        if(phone === '') {\n            this.setState({errors: {phone: \"Phone is Required\"}});\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n      const { name, email, phone, errors } = this.state;\n\n      return (\n          <Consumer>\n              {value => {\n                  const { dispatch } = value;\n                  return(\n                    <div className=\"card mb-3\">\n                    <div className=\"card-header\">Edit Contact</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                            <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" value={name} onChange={this.onChange} error={errors.name} />\n                            <TextInputGroup label=\"Email\" type=\"email\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={this.onChange} error={errors.email} />\n                            <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone\" value={phone} onChange={this.onChange} error={errors.phone} />\n                         <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-light\"/>\n                        </form>\n                    </div>\n                  </div>\n                  )\n              }}\n          </Consumer>\n      )\n  }\n}\n\nexport default  EditContact","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  onDeleteClick = async (id, dispatch) => {\n    await axios\n    .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({type: 'DELETE_CONTACT', payload: id});\n  };\n\n  render() {\n    const{ id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card card-body mb-3\">\n            <h4>{name} \n            <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\n            <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n            <Link to={`contact/edit/${id}`}>\n              <i className=\"fas fa-pencil-alt \" style={{cursor:'pointer', float:'right', color: 'black', marginRight:'1rem'}}></i>\n            </Link>\n            </h4>\n            {showContactInfo ? (          <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email: {email}</li>\n                <li className=\"list-group-item\">Phone: {phone}</li>\n            </ul>) : null}\n  \n        </div>\n          )\n        }}\n      </Consumer>\n    )\n  };\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default  Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\n class Contacts extends Component {\n  render() {\n\n    return(\n        <Consumer>\n            {value => {\n                const { contacts } = value;\n                return (\n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact List</span></h1>\n                    {contacts.map(contact => (\n                        <Contact key={contact.id} contact={contact}/>\n                    ))}\n                  </React.Fragment>\n                );\n            }}\n        </Consumer>\n    )\n  }\n}\n\nexport default Contacts;","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found </h1>\n      <p className=\"lead\">Sorry, That page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react'\n\n class Test extends Component {\n     state= {\n         title: '',\n         body: ''\n     };\n     componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then(response => response.json())\n        .then(data => this.setState({\n            title: data.title,\n            body: data.body\n        }));\n     }\n    //  componentWillMount() {\n    //     console.log('componentWillMount...');\n    // }\n    // componentDidUpdate() {\n    //     console.log('componentDidUpdate...');\n    // }\n    // componentWillUpdate() {\n    //     console.log('componentWillUpdate...');\n    // }\n    // componentWillReceiveProps(nextProps, nextState) {\n    //     console.log('componentWillReceiveProps');\n    // }\n\n  render() {\n      const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Contacts from './components/contacts/Contacts';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n        <Header  branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test}/>\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}